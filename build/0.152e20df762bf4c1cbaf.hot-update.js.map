{"version":3,"file":"0.152e20df762bf4c1cbaf.hot-update.js","sources":["webpack:///src/components/MonthPicker/MonthPicker.js"],"sourcesContent":["import React, { cloneElement } from 'react';\nimport PropTypes from 'prop-types';\nimport MonthPickerContainer from './MonthPickerContainer';\nimport MonthPickerNav from './MonthPickerNav';\nimport MonthPickerNavItem from './MonthPickerNavItem';\nimport MonthPickerMonthItem from './MonthPickerMonthItem';\nimport MonthPickerBodyContainer from './MonthPickerBodyContainer';\nimport MonthPickerDropDown from './MonthPickerDropDown';\nimport MonthPickerDropDownContainer from './MonthPickerDropDownContainer';\nimport WatchDocumentEvents from './WatchDocumentEvents';\nimport NavButton from './NavButton';\nimport generateMonths from './utils/generate-months';\nimport generateYears from './utils/generate-years';\n\nclass MonthPicker extends React.Component {\n  constructor(props) {\n    super(props);\n    const years = generateYears();\n    const months = generateMonths(this.props.locale);\n    this.state = {\n      months,\n      years,\n      activeIndex: years.length - 1,\n      open: false,\n      selected: { month: months[0], year: years[years.length - 1] },\n    };\n  }\n\n  monthSelect = (month, year) => () => {\n    this.setState({ selected: { month, year } });\n    if (this.props.handleMonthSelect) {\n      this.prop.handleMonthSelect(month, year);\n    }\n    this.toggle();\n  };\n\n  next = () => {\n    if (this.state.activeIndex < this.state.years.length - 1) {\n      this.setState({ activeIndex: this.state.activeIndex + 1 });\n    }\n  };\n\n  prev = () => {\n    if (this.state.activeIndex >= 1) {\n      this.setState({ activeIndex: this.state.activeIndex - 1 });\n    }\n  };\n\n  toggle = () => this.setState({ open: !this.state.open });\n\n  render() {\n    const newButton = cloneElement(this.props.button, {\n      onClick: this.toggle,\n      title: `${this.state.selected.month.fullName} ${this.state.selected.year}`,\n    });\n    return (\n      <MonthPickerDropDown>\n        {newButton}\n        {this.state.open &&\n          <MonthPickerDropDownContainer>\n            <WatchDocumentEvents onClickOutside={this.toggle} onEscapeKey={this.toggle}>\n              <MonthPickerContainer onKeyUp={this.toggle}>\n                <MonthPickerNav>\n                  <MonthPickerNavItem order={1} grow={0} onClick={this.prev} role=\"button\" button>\n                    <NavButton prev />\n                  </MonthPickerNavItem>\n                  <MonthPickerNavItem order={2} grow={3}>\n                    {this.state.years[this.state.activeIndex]}\n                  </MonthPickerNavItem>\n                  <MonthPickerNavItem order={3} grow={0} onClick={this.next} role=\"button\" button>\n                    <NavButton />\n                  </MonthPickerNavItem>\n                </MonthPickerNav>\n                <MonthPickerBodyContainer>\n                  {\n                    this.state.months.map(\n                      (month) =>\n                        <MonthPickerMonthItem\n                          key={month.number}\n                          basis=\"50px\"\n                          onClick={this.monthSelect(month, this.state.years[this.state.activeIndex])}\n                          title={month.fullName}\n                        >\n                          {month.name}\n                        </MonthPickerMonthItem>\n                    )\n                  }\n                </MonthPickerBodyContainer>\n              </MonthPickerContainer>\n            </WatchDocumentEvents>\n          </MonthPickerDropDownContainer>\n        }\n      </MonthPickerDropDown>\n    );\n  }\n}\n\nMonthPicker.propTypes = {\n  locale: PropTypes.string.isRequired,\n  handleMonthSelect: PropTypes.func,\n  button: PropTypes.node.isRequired,\n};\n\nexport default MonthPicker;\n\n\n\n// WEBPACK FOOTER //\n// src/components/MonthPicker/MonthPicker.js"],"mappings":";A;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AADA;AACA;AADA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAdA;AAsBA;AACA;AACA;AACA;AACA;AA1BA;AA4BA;AACA;AACA;AACA;AACA;AAhCA;AAiCA;AAAA;AACA;AAhCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAJA;AAWA;AACA;;;AAuBA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAPA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAMA;AANA;AADA;AAHA;AAZA;AADA;AADA;AAHA;AAsCA;;;;AAhFA;AACA;AAkFA;AACA;AACA;AACA;AAHA;AACA;AAKA;;;;A","sourceRoot":""}